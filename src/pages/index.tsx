import Head from 'next/head'
import React, { useEffect, useState } from 'react'

export default function Home() {
  const [count, setCount] = useState(0)
  const [user, setUser] = useState({})
  const [login, setLogin] = useState<string>()

  useEffect(() => {
    if (login != null) {
      fetch(`https://api.github.com/users/${login}`)
        .then(async res => setUser(await res.json()))
        .catch()
    }
  }, [login])
  // const { data, error } = useSWR(
  //   'https://api.github.com/users/jhonleandres',
  //   fetch
  // )
  // console.log(data)

  // https://api.github.com/users/jhonleandres

  const handleChange = (
    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>
  ) => {
    setLogin(e.target.value)
  }
  if (login != null) {
    console.log(login)
  }
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <div className='relative z-0 mb-6 w-full group'>
        <input
          id='user'
          type={'text'}
          onChange={event => {
            handleChange(event)
          }}
          className='block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer'
          placeholder='Login'
          value={login}
        />
        <label className='peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6'></label>
      </div>
      <div className='flex'>
        {/* <Count count={count} /> */}
        {JSON.stringify(login, null, 2)}
      </div>
      {/* <button
        id='increment'
        onClick={() => {
          setCount(count + 1)
        }}
        className='p-2'
      >
        +
      </button>
      <button
        id='decrement'
        onClick={() => {
          setCount(count - 1)
        }}
        className='p-2'
      >
        -
      </button> */}
    </div>
  )
}
function handleChange(e: any, arg1: any) {
  throw new Error('Function not implemented.')
}
